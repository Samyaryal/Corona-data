{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","images/image.png","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/Country.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","BarChart","options","legend","display","title","text","Country","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","style","image","src","coronaImage","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca8287cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n  if(!confirmed){\n    return ('...Loading')\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card, styles.infected)}>\n          <CardContent >\n            <Typography color=\"textSecondary\" gutterBottom> Infected</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>{new Date (lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card, styles.recovered)}>\n          <CardContent >\n            <Typography color=\"textSecondary\" gutterBottom> Recovered</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start ={0} end= {recovered.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>{new Date (lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card, styles.deaths)}>\n          <CardContent >\n            <Typography color=\"textSecondary\" gutterBottom> Deaths</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start ={0} end= {deaths.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>{new Date (lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of Deaths from COVID-19</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    \n    </div>\n  )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n  let changeableUrl = url;\n  if(country){\n    changeableUrl= `${url}/countries/${country}`\n  }\n  try{\n    const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl) //data destructuring \"response.data\"\n\n    // const modifiedData ={\n    //   confirmed: data.confirmed,\n    //   recovered: data.recovered,\n    //   deaths: data.deaths,\n    //   lastUpdate: data.lastUpdate,\n    // }\n    return {confirmed, recovered, deaths, lastUpdate};\n  } catch(e) {\n     console.log(e);\n  }\n}\n\nexport const fetchDailyData = async() =>{\n  try{\n    const {data}  = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }))\n    return modifiedData\n  } catch (e){\n    console.log(e);\n  }\n}\n\nexport const fetchCountries = async () =>{\n  try {\n    const {data: {countries}} = await axios.get(`${url}/countries`);\n    return countries.map((country)=> country.name)\n  } catch (e){\n    console.log(e);\n  }\n}\n\n","import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect (() => {\n    const fetchAPI = async() =>{\n      setDailyData(await fetchDailyData());\n    }\n    fetchAPI();\n  }, [])\n\n  const LineChart = (\n    dailyData.length \n    ? (\n      <Line \n        data ={{\n          labels: dailyData.map(({date}) => date),\n          datasets: [{\n            data: dailyData.map(({confirmed}) => confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true\n          }, {\n            data: dailyData.map(({deaths}) => deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true\n          }],\n        }}\n      />) : null\n    \n  );\n\n  const BarChart = (\n    confirmed \n    ? (\n      <Bar \n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [{\n          label: 'People',\n          backgroundColor: [\n            'rgba(0, 0, 255, 0.5)',\n            'rgba(0, 255, 0, 0.5)',\n            'rgba(255, 0, 0, 0.5)',\n          ],\n          data:[confirmed.value, recovered.value, deaths.value]\n        }]\n\n      }}\n      options={{\n        legend: {display: false},\n        title: {display: true, text:`Current state in ${country}`}, \n      }}\n      />\n    ) : null\n  )\n  return (\n    <div className={styles.container}>\n      { country ? BarChart : LineChart}\n    </div>\n  )\n}\n\nexport default Chart;\n","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './Country.module.css';\nimport {fetchCountries} from '../../api';\n\nconst Country = ({handleCountryChange}) => {\n  const [fetchedCountries, setfetchedCountries] = useState([]);\n  useEffect(() =>{\n    const fetchAPI = async () =>{\n      setfetchedCountries (await fetchCountries());\n    }\n    fetchAPI();\n  }, [setfetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value) }>\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  )\n}\n\nexport default Country;\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\n\nimport {Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\nimport coronaImage from './images/image.png';\nimport { style } from '@material-ui/system';\n\nclass App extends React.Component{\n  state={\n    data: {},\n    country: '',\n  }\n  async componentDidMount (){\n    const fetchedData = await fetchData();\n    this.setState({data:fetchedData})\n  }\n  handleCountryChange = async(country) =>{\n     //fetch the data and set the state\n    const fetchedData = await fetchData(country);\n    this.setState({data:fetchedData, country: country});\n\n  }\n  render(){\n    const {data, country} = this.state;\n    return (\n      <div className={styles.container} >\n      <img className={style.image} src={coronaImage} alt='COVID-19'/>\n      <Cards data={data}/>\n      <CountryPicker handleCountryChange={this.handleCountryChange}/>\n      <Chart data={data} country={country}/>\n     \n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__2IbjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}